<?xml version="1.0" encoding="UTF-8"?>

<!--
 Tutoring rules for Little Mozart.
 
 Try to make Little Mozart a tutor with emotions, that can help the user to build music
 
 There are 2 actions made by Mozart
 - Talk -> Mozart should talk
 - Think -> For debugging purpose
 
 What should be really said by Mozart and how it is at the competences level, not in the brain.
 
 The only emotion that currently is being changed is Joy
 -->

<Rules>
	<!-- Melody started -->
	<Condition type="Perception" perception="Start Melody">
		<!-- Save the deleted option for checking if two notes where deleted sequentially -->
		<Property name="Previous Deleted Bad" value="False" />
	</Condition>
    
	<!-- Note added (note + duration) -->
	<Condition type="Perception" perception="Duration">
		<!-- Calculate the number of notes and pause -->
		<DataMining variable="[Count Notes]" operation="Count" event="Note" memory="WM" />
		<DataMining variable="[Count Pause]" operation="Count" event="Pause" memory="WM" />
		<MathOperation result="[Number Notes]" name="Sum" variable="[Count Pause]" value="[Count Notes]" />
		<!-- If exist notes -->
		<Condition type="Variable" variable="[Number Notes]" compareValue="0" operator="Bigger">
			<!-- Get the note added -->
			<DataMining operation="Last" event="Note" variable="[Last Note]"  memory="WM" />
		</Condition>
		<!-- It's the first note -->
		<Condition type="Variable" variable="[Number Notes]" compareValue="1">
			<!-- Compare to DO -->
			<Condition type="Variable" variable="[Last Note]" compareValue="Do">
				<Action name="Talk" value="Start Good" />
			</Condition>
			<!-- Compare to RE -->
			<Condition type="Variable" variable="[Last Note]" compareValue="Re">
				<Action name="Talk" value="Start Bad [Last Note]" />
			</Condition>
			<!-- Compare to MI -->
			<Condition type="Variable" variable="[Last Note]" compareValue="Mi">
				<Action name="Talk" value="Start Good" />
			</Condition>
			<!-- Compare to FA -->
			<Condition type="Variable" variable="[Last Note]" compareValue="Fa">
				<Action name="Talk" value="Start Bad [Last Note]" />
			</Condition>
			<!-- Compare to SOL -->
			<Condition type="Variable" variable="[Last Note]" compareValue="Sol">
				<Action name="Talk" value="Start Good" />
			</Condition>
			<!-- Compare to LA -->
			<Condition type="Variable" variable="[Last Note]" compareValue="La">
				<Action name="Talk" value="Start Bad [Last Note]" />
			</Condition>
			<!-- Compare to SI -->
			<Condition type="Variable" variable="[Last Note]" compareValue="Si">
				<Action name="Talk" value="Start Bad [Last Note]" />
			</Condition>
			<!-- Compare to DO AGUDO -->
			<Condition type="Variable" variable="[Last Note]" compareValue="DoAgudo">
				<Action name="Talk" value="Start Good" />
			</Condition>
			<!-- Compare to PAUSE -->
			<Condition type="Variable" variable="[Last Note]" compareValue="Pause">
				<Action name="Talk" value="Start Bad [Last Note]" />
			</Condition>
		</Condition>
		<!-- Isn't the first note -->
		<Condition type="Variable" variable="[Number Notes]" compareValue="1" operator="Bigger">
			<!-- Bad note and duration -->
			<Condition type="Property" property="Notes Option" compareValue="Bad">
				<Condition type="Property" property="Duration Option" compareValue="Bad">
					<Random>
						<Action name="Talk" value="Bad Choice" />
						<Action name="Talk" value="Both Bad" />
					</Random>
				</Condition>
			</Condition>
			<!-- Bad note and Good duration -->
			<Condition type="Property" property="Notes Option" compareValue="Bad">
				<Condition type="Property" property="Duration Option" compareValue="Good">
					<Random>
						<Action name="Talk" value="Bad Choice" />
						<Action name="Talk" value="Bad Note" />
					</Random>
				</Condition>
			</Condition>
			<!-- Good note but Bad duration -->
			<Condition type="Property" property="Notes Option" compareValue="Good">
				<Condition type="Property" property="Duration Option" compareValue="Bad">
					<Action name="Talk" value="Bad Duration" />
				</Condition>
			</Condition>
			
			<!-- Good note and duration -->
            <!-- TODO ????? -->
            
			<!-- Music time -->
            <!-- TODO: is missing a OR between the conditions -->
             <!--       var that is changed when enters in a condition -->
			<DataMining variable="[Music Duration]" operation="Sum" event="Duration" memory="WM" />
			<MathOperation result="[Rest]" name="remainder" variable="[Music Duration]" value="4" />
			<!-- Bigger the 12 -->
			<Condition type="Variable" variable="[Music Duration]" compareValue="12"  operator=">=">
				<!-- It's a good time to finish -->
				<!-- Can be divided by 4 -->
				<Condition type="Variable" variable="[Rest]" compareValue="0">
					<!-- End in Do or Do Agudo -->
					<Condition type="Variable" variable="[Last Note]" compareValue="Do">
						<Action name="Talk" value="Finish Time" />
					</Condition>
					<Condition type="Variable" variable="[Last Note]" compareValue="DoAgudo">
						<Action name="Talk" value="Finish Time" />
					</Condition>
				</Condition>
			</Condition>
			<!-- Next compass is good to finish the music-->
			<Condition type="Variable" variable="[Music Duration]" compareValue="12">
				<Action name="Talk" value="Finish Compass" />
			</Condition>
			<Condition type="Variable" variable="[Music Duration]" compareValue="28">
				<Action name="Talk" value="Finish Compass" />
			</Condition>
			<!-- Say the music current time -->
			<Condition type="Variable" variable="[Rest]" compareValue="0">
				<Action name="Talk" value="Music Has [Music Duration]" />
			</Condition>
			<!-- Remember the pauses, on 10% of the times -->
			<!-- Get the last note added -->
			<Condition type="Variable" variable="[Last Note]" compareValue="Pause" operator="different">
				<Random>
					<Action name="Talk" value="Try Pause" />
					<Action name="Discard" />
					<Action name="Discard" />
					<Action name="Discard" />
					<Action name="Discard" />
					<Action name="Discard" />
					<Action name="Discard" />
					<Action name="Discard" />
					<Action name="Discard" />
					<Action name="Discard" />
				</Random>
			</Condition>
			
			<!-- Music time -->
			
		</Condition>
        
	</Condition>
	<!-- Note deleted (note + duration) -->
	<Condition type="Perception" perception="Delete Duration">
        
		<!-- Update Deleted Bad value -->
		<!-- False - default value -->
		<Property name="Deleted Bad" value="False" />
		<!-- True - if note deleted was bad -->
		<Condition type="Property" property="Deleted Notes Option" compareValue="Bad">
			<Property name="Deleted Bad" value="True" />
		</Condition>
		<Condition type="Property" property="Deleted Notes Option" compareValue="Good">
			<!-- True - if duration deleted was bad -->
			<Condition type="Property" property="Deleted Duration Option" compareValue="Bad">
				<Property name="Deleted Bad" value="True" />
			</Condition>
		</Condition>
        
		<!-- Calculate the number of notes and pause -->
		<DataMining variable="[Count Notes]" operation="Count" event="Note" memory="WM" />
		<DataMining variable="[Count Pause]" operation="Count" event="Pause" memory="WM" />
		<MathOperation result="[Number Notes]" name="Sum" variable="[Count Pause]" value="[Count Notes]" />
		<!-- It was deleted the first note -->
		<Condition type="Variable" variable="[Number Notes]" compareValue="0">
			<!-- Sugest other if previous was a bad choice -->
			<Condition type="Property" property="Deleted Notes Option" compareValue="Bad">
				<Random>
					<Action name="talk" value="Start With Do" />
					<Action name="talk" value="Start With Mi" />
					<Action name="talk" value="Start With Sol" />
					<Action name="talk" value="Start With DoAgudo" />
				</Random>
			</Condition>
		</Condition>
		
		<!-- It wasn't deleted the first note -->
		<Condition type="Variable" variable="[Number Notes]" compareValue="0" operator="Bigger">
			<!-- Check if there are only pauses (Duration > 0, Note quantity == 0) -->
			<Condition type="Datamining" operation="Exists" event="Note" compareValue="0" memory="WM">
				<Action name="Talk" value="Start Bad Pause"/>
				<Random>
					<Action name="talk" value="Start With Do" />
					<Action name="talk" value="Start With Mi" />
					<Action name="talk" value="Start With Sol" />
					<Action name="talk" value="Start With DoAgudo" />
				</Random>
			</Condition>
			
			<!-- Check if notes are present en WM -->
			<Condition type="Datamining" operation="Exists" event="Note" compareValue="1" memory="WM">
				<!-- Get the current last note -->
				<DataMining variable="[Last Note]" operation="Last" event="Note"  memory="WM" />
				<!-- Get the current last note sequence option -->
				<DataMining variable="[Last Note Option]" operation="Last" event="Note Option"  memory="WM" />
				
				<!-- Check if removed note was a bad note -->
				<Condition type="Property" property="Deleted Notes Option" compareValue="Bad">
					<!-- Check if current note is a good note -->
					<Condition type="Property" property="Notes Option" compareValue="Good">
						<!-- Give a suggestion for the next note -->
						<!-- Current note Do -->
						<Condition type="Variable" variable="[Last Note]" compareValue="Do">
							<Random>
								<Action name="Talk" value="Use Again Do" />
								<Action name="Talk" value="Use Note Re" />
								<Action name="Talk" value="Use Note Mi" />
								<Action name="Talk" value="Use Note Sol" />
								<Action name="Talk" value="Use Note DoAgudo" />
							</Random>
						</Condition>
						<!-- Current note Re -->
						<Condition type="Variable" variable="[Last Note]" compareValue="Re">
							<Random>
								<Action name="Talk" value="Use Note Do" />
								<Action name="Talk" value="Use Again Re" />
								<Action name="Talk" value="Use Note Mi" />
								<Action name="Talk" value="Use Note Sol" />
							</Random>
						</Condition>
						<!-- Current note Mi -->
						<Condition type="Variable" variable="[Last Note]" compareValue="Mi">
							<Random>
								<Action name="Talk" value="Use Note Do" />
								<Action name="Talk" value="Use Note Re" />
								<Action name="Talk" value="Use Again Mi" />
								<Action name="Talk" value="Use Note Fa" />
								<Action name="Talk" value="Use Note Sol" />
							</Random>
						</Condition>
						<!-- Current note Fa -->
						<Condition type="Variable" variable="[Last Note]" compareValue="Fa">
							<Random>
								<Action name="Talk" value="Use Note Mi" />
								<Action name="Talk" value="Use Again Fa" />
								<Action name="Talk" value="Use Note Sol" />
							</Random>
						</Condition>
						<!-- Current note Sol -->
						<Condition type="Variable" variable="[Last Note]" compareValue="Sol">
							<Random>
								<Action name="Talk" value="Use Note Do" />
								<Action name="Talk" value="Use Note Mi" />
								<Action name="Talk" value="Use Note Fa" />
								<Action name="Talk" value="Use Again Sol" />
								<Action name="Talk" value="Use Note La" />
							</Random>
						</Condition>
						<!-- Current note La -->
						<Condition type="Variable" variable="[Last Note]" compareValue="La">
							<Random>
								<Action name="Talk" value="Use Note Sol" />
								<Action name="Talk" value="Use Again La" />
								<Action name="Talk" value="Use Note Si" />
							</Random>
						</Condition>
						<!-- Current note Si -->
						<Condition type="Variable" variable="[Last Note]" compareValue="Si">
							<Random>
								<Action name="Talk" value="Use Note La" />
								<Action name="Talk" value="Use Again Si" />
								<Action name="Talk" value="Use Note DoAgudo" />
							</Random>
						</Condition>
						<!-- Current note Do Agudo -->
						<Condition type="Variable" variable="[Last Note]" compareValue="DoAgudo">
							<Random>
								<Action name="Talk" value="Use Note Do" />
								<Action name="Talk" value="Use Note Si" />
								<Action name="Talk" value="Use Note Sol" />
								<Action name="Talk" value="Use Again DoAgudo" />
							</Random>
						</Condition>
					</Condition>
				</Condition>
                
				<!-- Check if removed note had a bad duration sequence -->
				<Condition type="Property" property="Deleted Notes Option" compareValue="Good">
					<Condition type="Property" property="Deleted Duration Option" compareValue="Bad">
						<MathOperation result="[Used Tempos]" variable="[Music Duration]" name="Remainder" value="4" />
						
						<!-- Duration is invalid -->
						<Condition type="Variable" variable="[Used Tempos]" compareValue="1">
							<Random>
								<Action name="Talk" value="Use Duration 3" />
								<Action name="Talk" value="Use Duration 2" />
								<Action name="Talk" value="Use Duration 1" />
							</Random>
						</Condition>
						<Condition type="Variable" variable="[Used Tempos]" compareValue="2">
							<Random>
								<Action name="Talk" value="Use Duration 2" />
								<Action name="Talk" value="Use Duration 1" />
							</Random>
						</Condition>
						<Condition type="Variable" variable="[Used Tempos]" compareValue="3">
							<Action name="Talk" value="Use Duration 1" />
						</Condition>
					</Condition>
				</Condition>
                
			</Condition>
            
			<!-- Check if there are still more then 1 note -->
			<Condition type="Variable" variable="[Count Notes]" compareValue="1" operator="Bigger">
                
				<!-- Check if current sequence is not good (note) -->
				<Condition type="variable" variable="[Last Note Option]" compareValue="Bad">
                    
					<!-- Check if previous sequence is not good (note) -->
					<DataMining variable="[Previous Note Status]" operation="Item" event="Note Option" position="-2" memory="WM" />
					<Condition type="variable" variable="[Previous Note Status]" compareValue="Bad">
                        
						<!-- Check if deleted sequence was bad -->
						<Condition type="Property" property="Deleted Bad" compareValue="True">
							<Condition type="Property" property="Previous Deleted Bad" compareValue="True">
								<Action name="Talk" value="Continue Deleting" />
							</Condition>
							<Condition type="Property" property="Previous Deleted Bad" compareValue="False">
								<Action name="Talk" value="Delete Previous" />
							</Condition>
						</Condition>
                        
					</Condition>
				</Condition>
                
				<!-- Check if current sequence is not good (duration) -->
				<Condition type="variable" variable="[Last Note Option]" compareValue="Good">
                    
					<!-- Get the current last duration sequence option -->
					<DataMining variable="[Last Duration Option]" operation="Last" event="Duration Option"  memory="WM" />
					<Condition type="variable" variable="[Last Duration Option]" compareValue="Bad">
                        
						<!-- Check if previous sequence is not good (note) -->
						<DataMining variable="[Previous Note Status]" operation="Item" event="Note Option" position="-2" memory="WM" />
						<Condition type="variable" variable="[Previous Note Status]" compareValue="Good">
                            
							<!-- Check if previous sequence is not good (duration) -->
							<DataMining variable="[Previous Duration Status]" operation="Item" event="Duration Option" position="-2" memory="WM" />
							<Condition type="variable" variable="[Previous Duration Status]" compareValue="Bad">
                                
								<!-- Check if deleted sequence was bad -->
								<Condition type="Property" property="Deleted Bad" compareValue="True">
									<Condition type="Property" property="Previous Deleted Bad" compareValue="True">
										<Action name="Talk" value="Continue Deleting" />
									</Condition>
									<Condition type="Property" property="Previous Deleted Bad" compareValue="False">
										<Action name="Talk" value="Delete Previous" />
									</Condition>
								</Condition>
							</Condition>
						</Condition>
					</Condition>
				</Condition>
                
				<!-- Update Previous Deleted Bad value -->
				<Property name="Previous Deleted Bad" value="{Deleted Bad}" />
				
			</Condition>
		</Condition>
	</Condition>
</Rules>
